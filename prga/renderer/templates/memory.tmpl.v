// Automatically generated by PRGA's blackbox library generator
{% macro memport(portsuffix, addr_width, data_width) -%}
    , input wire [{{ addr_width - 1 }}:0] addr{{ portsuffix }}
    , input wire [{{ data_width - 1 }}:0] data{{ portsuffix }}
    , input wire [0:0] we{{ portsuffix }}
    , output reg [{{ data_width - 1 }}:0] out{{ portsuffix }}
{%- endmacro -%}
{% macro memproc(portsuffix, addr_width) -%}
    // convert 'x' or 'z' to '0' in simulation
    reg internal_we{{ portsuffix }};
    reg [{{ addr_width - 1 }}:0] internal_addr{{ portsuffix }};

    always @* begin
        internal_we{{ portsuffix }} = we{{ portsuffix }};
        internal_addr{{ portsuffix }} = addr{{ portsuffix }};

        // synopsys translate_off
        if (we{{ portsuffix }} === 1'bx || we{{ portsuffix }} === 1'bz) begin
            internal_we{{ portsuffix }} = 1'b0;
        end
        {% for i in range(addr_width) %}
        if (addr{{ portsuffix }}[{{ i }}] === 1'bx || addr{{ portsuffix }}[{{ i }}] === 1'bz) begin
            internal_addr{{ portsuffix }} = 1'b0;
        end
        {%- endfor %}
        // synopsys translate_on
    end

    always @(posedge clk) begin
        if (internal_we{{ portsuffix }}) begin
            mem[internal_addr{{ portsuffix }}] <= data{{ portsuffix }};
        end

        out{{ portsuffix }} <= mem[internal_addr{{ portsuffix }}];
    end
{%- endmacro -%}
{%- set dualport = "addr1" in module.ports %}
module {{ module.name }} (
    input wire [0:0] clk
    {% if dualport -%}
        {{ memport('1', module.ports.addr1|length, module.ports.data1|length) }}
        {{ memport('2', module.ports.addr2|length, module.ports.data2|length) }}
    {%- else -%}
        {{ memport('', module.ports.addr|length, module.ports.data|length) }}
    {%- endif %}
    );

    {% if dualport -%}
    reg [{{ module.ports.data1|length - 1}}:0] mem [0:{{ 2 ** module.ports.addr1|length - 1 }}];
    {%- else -%}
    reg [{{ module.ports.data|length - 1}}:0] mem [0:{{ 2 ** module.ports.addr|length - 1 }}];
    {%- endif %}

    {% if dualport -%}
        {{ memproc('1', module.ports.addr2|length) }}

        {{ memproc('2', module.ports.addr1|length) }}
    {%- else -%}
        {{ memproc('', module.ports.addr|length) }}
    {%- endif %}

endmodule


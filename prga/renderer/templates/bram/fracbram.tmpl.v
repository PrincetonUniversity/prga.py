{%- from 'macros/module.tmpl' import instantiation -%}
// Automatically generated by PRGA's RTL generator
`timescale 1ns/1ps
module {{ module.name }} #(
    parameter   ADDR_WIDTH = {{ module.ports.waddr|length }}
    , parameter DATA_WIDTH = {{ module.ports.din|length }}
) (
    input wire [0:0] clk

    , input wire [ADDR_WIDTH - 1:0] waddr
    , input wire [0:0]              we
    , input wire [DATA_WIDTH - 1:0] din

    , input wire [ADDR_WIDTH - 1:0] raddr
    , output wire [DATA_WIDTH - 1:0] dout

    , input wire [0:0] prog_done
    , input wire [{{ module.ports.prog_data|length - 1 }}:0] prog_data
    );

    // non-fracturable memory core
    localparam  CORE_ADDR_WIDTH = {{ module.core_addr_width }};

    wire [CORE_ADDR_WIDTH - 1:0]    ip_waddr, ip_raddr;
    wire                            ip_we, ip_re;
    wire [DATA_WIDTH - 1:0]         ip_bw, ip_din, ip_dout;

    {{ instantiation(module.instances.i_ram) }} (
        .clk                        (clk)
        ,.rst                       (~prog_done)
        ,.waddr                     (ip_waddr)
        ,.din                       (ip_din)
        ,.we                        (ip_we)
        ,.bw                        (ip_bw)
        ,.raddr                     (ip_raddr)
        ,.re                        (ip_re)
        ,.dout                      (ip_dout)
        );

    // Fracturable memory controller
    {{ instantiation(module.instances.i_ctrl) }} (
        .clk                        (clk)
        ,.u_waddr_i                 (waddr)
        ,.u_we_i                    (we)
        ,.u_din_i                   (din)
        ,.u_raddr_i                 (raddr)
        ,.u_dout_o                  (dout)
        ,.ip_waddr_o                (ip_waddr)
        ,.ip_we_o                   (ip_we)
        ,.ip_din_o                  (ip_din)
        ,.ip_bw_o                   (ip_bw)
        ,.ip_raddr_o                (ip_raddr)
        ,.ip_re_o                   (ip_re)
        ,.ip_dout_i                 (ip_dout)
        ,.prog_done                 (prog_done)
        ,.prog_data                 (prog_data)
        );

endmodule

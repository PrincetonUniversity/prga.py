// Automatically generated by PRGA's RTL generator
`timescale  1ns/1ps
module prga_fake_clkgen (
    /*
    *   clock period = ({period_p1x100ps_i} + 1) * 100ps)
    *
    *   Examples:
    *       +-------+-------------+-------------+
    *       | Value | Period (ns) | Freq. (MHz) |
    *       +-------+-------------+-------------+
    *       |     0 |         0.1 |      10,000 |
    *       |     9 |         1.0 |       1,000 |
    *       |    32 |         3.3 |         303 |
    *       |    43 |         4.4 |         227 |
    *       |    99 |        10.0 |         100 |
    *       +-------+-------------+-------------+
    */
    input wire [31:0]       period_p1x100ps_i

    , output reg            gclk
    );

    // 20GHz atom clock (fake)
    reg     atom;

    initial begin
        atom    = 1'b0;
    end

    always #0.025 atom = ~atom;

    // generate clock
    reg [31:0]  cnt;

    initial begin
        cnt     = 32'd0;
        gclk    = 1'b0;
    end

    always @(posedge atom) begin
        // make sure initial state is safe
        if (|period_p1x100ps_i === 1'bx) begin
            // run at 100MHz in this case
            if (cnt >= 99) begin
                cnt     <= 32'd0;
                gclk    <= ~gclk;
            end else begin
                cnt     <= cnt + 1;
            end
        end

        else begin
            if (cnt >= period_p1x100ps_i) begin
                cnt     <= 32'd0;
                gclk    <= ~gclk;
            end else begin
                cnt     <= cnt + 1;
            end
        end
    end

endmodule

// Automatically generated by PRGA's RTL generator
//  Dual-clock 1r1w memory
`timescale 1ns/1ps
module prga_ram_1r1w_dc #(
    parameter DATA_WIDTH = 32,
    parameter ADDR_WIDTH = 6,
    parameter RAM_ROWS = 64,
    parameter REGISTER_OUTPUT = 1
) (
    input wire [0:0] wclk,
    input wire [ADDR_WIDTH - 1:0] waddr,
    input wire [DATA_WIDTH - 1:0] wdata,
    input wire [0:0] we,

    input wire [0:0] rclk,
    input wire [ADDR_WIDTH - 1:0] raddr,
    output reg [DATA_WIDTH - 1:0] rdata
    );

    reg [DATA_WIDTH - 1:0] data [RAM_ROWS - 1:0];

    always @(posedge wclk) begin
        if (we) begin
            data[waddr] <= wdata;
        end
    end

    generate if (REGISTER_OUTPUT) begin
        always @(posedge rclk) begin
            rdata <= data[raddr];
        end
    end else begin
        always @* begin
            rdata = data[raddr];
        end
    end endgenerate

endmodule

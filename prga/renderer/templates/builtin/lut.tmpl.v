// Automatically generated by PRGA's RTL generator
{% set width = module.ports.in|length -%}
`timescale 1ns/1ps
module {{ module.name }} (
    input wire [{{ width - 1 }}:0] in
    , output reg [0:0] out

    , input wire [0:0] cfg_e
    , input wire [0:0] prim_e
    , input wire [{{ 2 ** width - 1}}:0] lut_data
    );

    reg [{{ width - 1 }}:0] internal_in;
    
    // synopsys translate_off
    // in case the sensitivity list is never triggered
    initial begin
        internal_in = $random % 64;
    end
    // synopsys translate_on

    always @* begin
        internal_in = in;

        // synopsys translate_off
        // in simulation, force unconnected LUT input to be random values
        {%- for i in range(width) %}
        if (in[{{ i }}] === 1'bx) begin
            internal_in[{{ i }}] = $random % 2;
        end
        {%- endfor %}
        // synopsys translate_on
    end

    always @* begin
        if (cfg_e || ~prim_e) begin
            out = 1'b0;
        end else begin
            case (internal_in)
                {%- for i in range(2 ** width) %}
                {{ width }}'d{{ i }}: out = lut_data[{{ i }}];
                {%- endfor %}
            endcase
        end
    end

endmodule

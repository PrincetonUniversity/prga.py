// Automatically generated by PRGA's RTL generator
`timescale 1ns/1ps
module prga_byteaddressable_reg #(
    parameter NUM_BYTES = 4,
    parameter RST_VALUE = 0
) (
    input wire [0:0] clk,
    input wire [0:0] rst,

    input wire [0:0] wr,
    input wire [NUM_BYTES - 1:0] mask,
    input wire [NUM_BYTES * 8 - 1:0] din,

    output reg [NUM_BYTES * 8 - 1:0] dout
    );

    wire [NUM_BYTES * 8 - 1:0] rst_value;

    assign rst_value = RST_VALUE;

    genvar i;
    generate for (i = 0; i < NUM_BYTES; i = i + 1) begin: byte_logic
        always @(posedge clk) begin
            if (rst) begin
                dout[i * 8 +: 8] <= rst_value[i * 8 +: 8];
            end else if (wr) begin
                dout[i * 8 +: 8] <= mask[i] ? din[i * 8 +: 8] : dout[i * 8 +: 8];
            end
        end
    end endgenerate

endmodule

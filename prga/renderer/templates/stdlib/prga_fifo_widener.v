// Automatically generated by PRGA's RTL generator
`include "prga_utils.vh"
module prga_fifo_widener #(
    parameter DATA_WIDTH = 32,
    parameter MULTIPLIER = 1
) (
    input wire [0:0] clk,
    input wire [0:0] rst,

    input wire [0:0] empty_i,
    output reg [0:0] rd_i,
    input wire [DATA_WIDTH - 1:0] dout_i,

    input wire [0:0] full_o,
    output reg [0:0] wr_o,
    output reg [DATA_WIDTH * MULTIPLIER - 1:0] din_o
    );

    localparam INPUT_COUNTER_WIDTH = `CLOG2(MULTIPLIER + 1);

    reg [INPUT_COUNTER_WIDTH - 1:0] counter;

    always @(posedge clk or posedge rst) begin
        if (rst) begin
            counter <= 'b0;
        end else begin
            if (wr_o) begin
                if (!full_o) begin
                    counter <= empty_i ? 0 : 1;
                end
            end else if (rd_i && ~empty_i) begin
                counter <= counter + 1;
            end
        end
    end

    always @(posedge clk) begin
        if (rd_i && ~empty_i) begin
            din_o <= {din_o, dout_i};
        end
    end

    always @* begin
        wr_o = counter == MULTIPLIER;
        rd_i = counter < MULTIPLIER || ~full_o;
    end

endmodule

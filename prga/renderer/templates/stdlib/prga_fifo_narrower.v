// Automatically generated by PRGA's RTL generator
`include "prga_utils.vh"
module prga_fifo_narrower #(
    parameter DATA_WIDTH = 32,
    parameter MULTIPLIER = 1
) (
    input wire [0:0] clk,
    input wire [0:0] rst,

    input wire [0:0] empty_i,
    output reg [0:0] rd_i,
    input wire [DATA_WIDTH * MULTIPLIER - 1:0] dout_i,

    input wire [0:0] full_o,
    output reg [0:0] wr_o,
    output reg [DATA_WIDTH - 1:0] din_o
    );

    localparam OUTPUT_COUNTER_WIDTH = `CLOG2(MULTIPLIER);

    reg [DATA_WIDTH * MULTIPLIER - 1:0] ibuf;
    reg [OUTPUT_COUNTER_WIDTH - 1:0] counter;

    always @(posedge clk or posedge rst) begin
        if (rst) begin
            counter <= 'b0;
            wr_o <= 'b0;
        end else begin
            if (rd_i) begin
                counter <= 'b0;
            end else if (~full_o) begin
                counter <= counter + 1;
            end

            if (rd_i) begin
                wr_o <= ~empty_i;
            end
        end
    end

    always @(posedge clk) begin
        if (rd_i) begin
            ibuf <= dout_i;
        end else if (~full_o) begin
            ibuf <= {ibuf, {DATA_WIDTH{1'b0}}};
        end
    end

    always @* begin
        rd_i = ~wr_o || (counter == MULTIPLIER - 1 && ~full_o);
        din_o = ibuf[DATA_WIDTH * (MULTIPLIER - 1) +: DATA_WIDTH];
    end

endmodule

// Automatically generated by PRGA's RTL generator
module sff (
    // user-accessible ports
    input wire [0:0] clk,
    input wire [0:0] rst,
    input wire [0:0] d,
    input wire [0:0] ce,
    output reg [0:0] q,

    // config ports
    input wire [0:0] cfg_clk,
    input wire [0:0] cfg_e,
    input wire [0:0] cfg_we,
    input wire [0:0] cfg_i,
    output reg [0:0] cfg_o
    );

    // mode enum
    localparam MODE_DFF = 3'b000;
    localparam MODE_DC  = 3'b010;   // synchronous clear (reset to 0), no clock-enable port
    localparam MODE_DP  = 3'b011;   // synchronous preset (reset to 1), no clock-enable port
    localparam MODE_DCN = 3'b110;   // synchronous clear, low-enable CE
    localparam MODE_DPN = 3'b111;   // synchronous preset, low-enable CE
    localparam MODE_DCE = 3'b100;   // synchronous clear, high-enable CE
    localparam MODE_DPE = 3'b100;   // synchronous preset, high-enable CE

    // prog bits
    reg [2:0] mode;

    // combinational outputs
    always @* begin
        cfg_o = mode[2];
    end

    always @(posedge cfg_clk) begin
        if (cfg_e && cfg_we) begin  // configuring
            mode <= {mode, cfg_o};
        end
    end

    always @(posedge clk) begin
        if (~cfg_e) begin           // running implemented design
            if ((mode[2] | mode[1]) && rst) begin   // rst pin in effect
                q <= mode[0];
            end else if (~mode[2] || (mode[1] ^ ce)) begin
                q <= d;
            end
        end
    end

endmodule

// Automatically generated by PRGA's RTL generator
module prga_app_softreg_vldrdy_wr #(
    parameter   DATA_WIDTH  = 32
    , parameter RSTVAL = 32'd0
) (
    input wire                          clk
    , input wire                        rst_n

    // -- system-side --------------------------------------------------------
    // -- request --
    , output wire                       req_rdy
    , input wire                        req_vld
    , input wire                        req_we
    , input wire [DATA_WIDTH - 1:0]     req_wmask
    , input wire [DATA_WIDTH - 1:0]     req_data

    // -- response --
    , input wire                        resp_rdy
    , output reg                        resp_vld
    , output wire [DATA_WIDTH - 1:0]    resp_data

    // -- kernel-side --------------------------------------------------------
    , output reg [DATA_WIDTH - 1:0]     var_o
    , output reg                        var_vld
    , input wire                        var_rdy
    );

    always @(posedge clk) begin
        if (~rst_n) begin
            var_vld <= 1'b0;
        end else if (req_rdy && req_vld && req_we && &req_wmask) begin
            var_vld <= 1'b1;
        end else if (var_rdy) begin
            var_vld <= 1'b0;
        end
    end

    always @(posedge clk) begin
        if (req_rdy && req_vld)
            var_o <= req_data;
    end

    always @(posedge clk) begin
        if (~rst_n) begin
            resp_vld <= 1'b0;
        end else if ((req_rdy && req_vld && !(req_we && &req_wmask)) || (var_vld && var_rdy)) begin
            resp_vld <= 1'b1;
        end else if (resp_rdy) begin
            resp_vld <= 1'b0;
        end
    end

    assign req_rdy = !var_vld && !resp_vld;
    assign resp_data = RSTVAL;

endmodule


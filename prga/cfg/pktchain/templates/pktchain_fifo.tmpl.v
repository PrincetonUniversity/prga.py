// Automatically generated by PRGA's RTL generator
module pktchain_fifo #(
    parameter DEPTH_LOG2 = 1,
    parameter DATA_WIDTH = 32
) (
    input wire [0:0] clk,
    input wire [0:0] rst,

    output reg [0:0] full,
    input wire [0:0] wr,
    input wire [DATA_WIDTH - 1:0] din,

    output reg [0:0] empty,
    input wire [0:0] rd,
    output reg [DATA_WIDTH - 1:0] dout
    );

    localparam FIFO_DEPTH = 1 << DEPTH_LOG2;

    reg [DATA_WIDTH - 1:0] data [FIFO_DEPTH - 1:0];
    reg [DEPTH_LOG2:0] wr_ptr, rd_ptr;

    always @(posedge clk or posedge rst) begin
        if (rst) begin
            wr_ptr <= 'b0;
            rd_ptr <= 'b0;
        end else begin
            if (~full && wr) begin
                data[wr_ptr[0 +: DEPTH_LOG2]] <= din;
                wr_ptr <= wr_ptr + 1;
            end

            if (~empty && rd) begin
                rd_ptr <= rd_ptr + 1;
            end
        end
    end

    always @* begin
        full = rd_ptr == {~wr_ptr[DEPTH_LOG2], wr_ptr[0 +: DEPTH_LOG2]};
        empty = rd_ptr == wr_ptr;
        dout = data[rd_ptr];
    end

endmodule

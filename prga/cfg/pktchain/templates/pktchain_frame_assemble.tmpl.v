// Automatically generated by PRGA's RTL generator
`include "pktchain.vh"
module pktchain_frame_assemble #(
    parameter DEPTH_LOG2 = 1,   // depth in terms of phits
    parameter DATA_WIDTH_LOG2 = `PRGA_PKTCHAIN_FRAME_SIZE_LOG2
) (
    input wire [0:0] cfg_clk,
    input wire [0:0] cfg_rst,

    // noc inputs (FIFO intf)
    output wire [0:0] phit_full,
    input wire [0:0] phit_wr,
    input wire [`PRGA_PKTCHAIN_PHIT_WIDTH - 1:0] phit_i,

    // frame buffer output (FIFO intf)
    output wire [0:0] frame_empty,
    input wire [0:0] frame_rd,
    output wire [(1 << DATA_WIDTH_LOG2) - 1:0] frame_o
    );

    wire fifo_empty, fifo_rd;
    wire [`PRGA_PKTCHAIN_PHIT_WIDTH - 1:0] fifo_dout;

    prga_fifo #(
        .DATA_WIDTH                 (`PRGA_PKTCHAIN_PHIT_WIDTH)
        ,.LOOKAHEAD                 (0)
        ,.DEPTH_LOG2                (DEPTH_LOG2)
    ) fifo (
        .clk                        (cfg_clk)
        ,.rst                       (cfg_rst)
        ,.full                      (phit_full)
        ,.wr                        (phit_wr)
        ,.din                       (phit_i)
        ,.empty                     (fifo_empty)
        ,.rd                        (fifo_rd)
        ,.dout                      (fifo_dout)
        );

    prga_fifo_resizer #(
        .DATA_WIDTH                 (`PRGA_PKTCHAIN_PHIT_WIDTH)
        ,.OUTPUT_MULTIPLIER         (1 << (DATA_WIDTH_LOG2 - `PRGA_PKTCHAIN_PHIT_WIDTH_LOG2))
        ,.INPUT_LOOKAHEAD           (0)
        ,.OUTPUT_LOOKAHEAD          (1)
    ) resizer (
        .clk                        (cfg_clk)
        ,.rst                       (cfg_rst)
        ,.empty_i                   (fifo_empty)
        ,.rd_i                      (fifo_rd)
        ,.dout_i                    (fifo_dout)
        ,.empty                     (frame_empty)
        ,.rd                        (frame_rd)
        ,.dout                      (frame_o)
        );

endmodule

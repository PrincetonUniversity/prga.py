// Automatically generated by PRGA's RTL generator
`ifndef PRGA_VH
`define PRGA_VH

`include "pktchain.vh"

`define PRGA_AXI_DATA_WIDTH_LOG2    6

`define PRGA_AXI_DATA_WIDTH         (1 << `PRGA_AXI_DATA_WIDTH_LOG2)
`define PRGA_BYTES_PER_AXI_DATA     (1 << (`PRGA_AXI_DATA_WIDTH_LOG2 - 3))

`define PRGA_FRAMES_PER_AXI_DATA    (1 << (`PRGA_AXI_DATA_WIDTH_LOG2 - `FRAME_SIZE_LOG2))
`define PRGA_BYTES_PER_FRAME        (1 << (`FRAME_SIZE_LOG2 - 3))

`define PRGA_AXI_ADDR_WIDTH         8
// -- BEGIN AUTO-GENERATION (see prga.cfg.pktchain.protocol for more info)
{%- for addr in context.summary.pktchain.protocol.AXILiteAddr %}
`define {{ addr.name }} `PRGA_AXI_ADDR_WIDTH'h{{ "{:>02x}".format(addr.value) }}
{%- endfor %}
// -- DONE AUTO-GENERATION

// PRGA controller states
`define PRGA_STATE_WIDTH                    8
// -- BEGIN AUTO-GENERATION (see prga.cfg.pktchain.protocol for more info)
{%- for state in context.summary.pktchain.protocol.AXILiteState %}
`define {{ state.name }} `PRGA_STATE_WIDTH'h{{ "{:>02x}".format(state.value) }}
{%- endfor %}
// -- DONE AUTO-GENERATION

// PRGA Config Flags
`define PRGA_CONFIG_UNPROGRAMMED_TILES_OK                           0   // if set, not all PRGA tiles must be programmed

// PRGA controller error messages
`define PRGA_ERR_FIFO_DEPTH_LOG2            7
`define PRGA_ERR_TYPE_WIDTH                 8                           // error message type field
`define PRGA_ERR_TYPE_INDEX                 `PRGA_AXI_DATA_WIDTH-1-:`PRGA_ERR_TYPE_WIDTH
// -- BEGIN AUTO-GENERATION (see prga.cfg.pktchain.protocol for more info)
{%- for err in context.summary.pktchain.protocol.AXILiteError %}
`define {{ err.name }} `PRGA_ERR_TYPE_WIDTH'h{{ "{:>02x}".format(err.value) }}
{%- endfor %}
// -- DONE AUTO-GENERATION

// Bitstream error subtypes
`define PRGA_ERR_BITSTREAM_SUBTYPE_WIDTH    8
`define PRGA_ERR_BITSTREAM_SUBTYPE_INDEX    `PRGA_AXI_DATA_WIDTH-`PRGA_ERR_TYPE_WIDTH-1-:`PRGA_ERR_BITSTREAM_SUBTYPE_WIDTH
// -- BEGIN AUTO-GENERATION (see prga.cfg.pktchain.protocol for more info)
{%- for err in context.summary.pktchain.protocol.AXILiteBitstreamError %}
`define {{ err.name }} `PRGA_ERR_BITSTREAM_SUBTYPE_WIDTH'h{{ "{:>02x}".format(err.value) }}
{%- endfor %}
// -- DONE AUTO-GENERATION

// PRGA tile status tracker
`define PRGA_TILE_STATUS_TRACKER_WIDTH      3
`define PRGA_TILE_STATUS_RESET              `PRGA_TILE_STATUS_TRACKER_WIDTH'h0  // reset and not programmed yet
    // Depending on configuration, some tiles may be not need to be configured
    // for the fabric to be fully configured
`define PRGA_TILE_STATUS_ERROR              `PRGA_TILE_STATUS_TRACKER_WIDTH'h1  // the tile is not correctly programmed
`define PRGA_TILE_STATUS_DONE               `PRGA_TILE_STATUS_TRACKER_WIDTH'h2  // the tile has been successfully programmed
`define PRGA_TILE_STATUS_PROGRAMMING        `PRGA_TILE_STATUS_TRACKER_WIDTH'h4  // programming packets (including the init packet) have been sent to the tile
`define PRGA_TILE_STATUS_PENDING            `PRGA_TILE_STATUS_TRACKER_WIDTH'h5  // checksum packet has been sent to the tile

// Other configurations
`define PRGA_TIMER_WIDTH                    32
`define PRGA_TRANSIENT_CYCLES               `PRGA_TIMER_WIDTH'd200

`endif

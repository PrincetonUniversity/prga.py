// Automatically generated by PRGA's RTL generator
{% set width = module.ports.i|length -%}
{% set cfg_width = module.ports.cfg_i|length -%}
`timescale 1ns/1ps
module {{ module.name }} (
    input wire [{{ width - 1 }}:0] i,
    output reg [0:0] o,

    input wire [0:0] cfg_clk,
    input wire [0:0] cfg_e,
    input wire [0:0] cfg_we,
    input wire [{{ cfg_width - 1 }}:0] cfg_i,
    output wire [{{ cfg_width - 1 }}:0] cfg_o,
    input wire [0:0] test_clk
    );

    wire [{{ module.cfg_bitcount - 1 }}:0] cfg_d;

    always @* begin
        if (cfg_e) begin    // avoid oscillating
            o = 1'b0;
        end else begin
            o = 1'b0;
            case (cfg_d)
                {%- for i in range(width) %}
                {{ module.cfg_bitcount }}'d{{ i }}: o = i[{{ i }}];
                {%- endfor %}
            endcase
        end
    end

    {{ module.instances.i_cfg_data.model.name }} i_cfg_data (
        .cfg_clk            (cfg_clk)
        ,.cfg_e             (cfg_e)
        ,.cfg_we            (cfg_we)
        ,.cfg_i             (cfg_i)
        ,.cfg_o             (cfg_o)
        ,.cfg_d             (cfg_d)
        );

endmodule

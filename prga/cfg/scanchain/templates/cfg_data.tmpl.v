// Automatically generated by PRGA's RTL generator
`timescale 1ns/1ps
module {{ module.name }} (
    input wire [0:0] cfg_clk,
    input wire [0:0] cfg_e,
    input wire [0:0] cfg_we,
    input wire [{{ module.ports.cfg_i|length }} - 1:0] cfg_i,
    output wire [{{ module.ports.cfg_o|length }} - 1:0] cfg_o,
    output reg [{{ module.ports.cfg_d|length }} - 1:0] cfg_d
    );

    localparam CFG_BITCOUNT = {{ module.ports.cfg_d|length }};
    localparam CFG_WIDTH = {{ module.ports.cfg_i|length }};

    wire [CFG_BITCOUNT + CFG_WIDTH - 1:0] cfg_d_next;
    assign cfg_d_next = {cfg_d, cfg_i};

    always @(posedge cfg_clk) begin
        if (cfg_e && cfg_we) begin
            cfg_d <= cfg_d_next;
        end
    end

    assign cfg_o = cfg_d_next[CFG_BITCOUNT +: CFG_WIDTH];

endmodule


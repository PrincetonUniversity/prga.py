// Automatically generated by PRGA's RTL generator
`timescale 1ns/1ps
{%- set num_sources = module.ports.ce|length %}
module {{ module.name }} #(
    parameter   WORD_WIDTH = {{ module.ports.dout|length }}
    , parameter NUM_SOURCES = {{ num_sources }}
) (
    input wire prog_clk
    , input wire prog_rst
    , output reg [WORD_WIDTH-1:0]   dout
    , input wire [NUM_SOURCES-1:0]  ce
        {% for i in range(num_sources) %}
    , input wire [WORD_WIDTH-1:0]   din{{ i }}
        {%- endfor %}
    );

    localparam  STAGES = {{ module.num_stages }};
    reg [NUM_SOURCES-1:0]   ce_f    [0:STAGES];

    always @* begin
        ce_f[0] = ce;
    end

    genvar i;
    generate for (i = 1; i < STAGES; i = i + 1) begin
        always @(posedge prog_clk) begin
            if (prog_rst) begin
                ce_f[i] <= { NUM_SOURCES {1'b0} };
            end else begin
                ce_f[i] <= ce_f[i-1];
            end
        end
    end endgenerate

    always @* begin
        dout = { WORD_WIDTH {1'b0} };
        {% set endelse = joiner("end else ") %}
        {%- for i in range(num_sources) %}
        {{ endelse() }}if (ce_f[STAGES][{{ i }}]) begin
            dout = din{{ i }};
        {%- endfor %}
        end
    end

endmodule

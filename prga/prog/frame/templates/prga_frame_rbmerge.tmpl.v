// Automatically generated by PRGA's RTL generator
`timescale 1ns/1ps
{%- set addr_width = module.ports.addr|length %}
module {{ module.name }} #(
    parameter   ADDR_WIDTH = {{ addr_width }}
    , parameter DATA_WIDTH = {{ module.ports.dout|length }}
) (
    input wire prog_clk
    , input wire prog_rst

    , input wire [ADDR_WIDTH-1:0]   addr
        {%- for i in range(module.num_sources) %}
    , input wire [DATA_WIDTH-1:0]   din{{ i }}
        {%- endfor %}
    , output reg [DATA_WIDTH-1:0]   dout
    );

    localparam  STAGES = {{ (module.num_stages|default(0)) + 1 }};
    reg [ADDR_WIDTH-1:0]    addr_f  [0:STAGES-1];

    always @* begin
        addr_f[0] = addr;
    end

    genvar i;
    generate for (i = 1; i < STAGES; i++) begin
        always @(posedge prog_clk) begin
            addr_f[i] <= { ADDR_WIDTH {1'b0} };
        end else begin
            addr_f[i] <= addr_f[i-1];
        end
    end endgenerate

    always @* begin
        dout = { DATA_WIDTH {1'b0} };

        case (addr_f[STAGES-1])
            {%- for i in range(module.num_sources) %}
            {{ addr_width }}'d{{ i }}: dout = din{{ i }};
            {%- endfor %}
        endcase
    end

endmodule

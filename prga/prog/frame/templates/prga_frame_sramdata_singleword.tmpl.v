// Automatically generated by PRGA's RTL generator
module {{ module.name }} #(
    parameter   WORD_WIDTH = {{ module.ports.prog_din|length }}
    , parameter DATA_WIDTH = {{ module.ports.prog_data_o|length }}
) (
    input wire prog_clk
    , input wire prog_rst
    , input wire prog_done

    , input wire [WORD_WIDTH-1:0]   prog_din
    , input wire                    prog_ce     // clock enable
    , input wire                    prog_we     // write enable

    , output wire [DATA_WIDTH-1:0]  prog_data_o
    , output reg [WORD_WIDTH-1:0]   prog_dout   // data read-back. one cycle latency (similar to an SRAM IP)
    );

    always @(posedge prog_clk) begin
        if (prog_rst) begin
            prog_dout <= { WORD_WIDTH {1'b0} };
        end else if (~prog_done && prog_ce && prog_we) begin
            prog_dout <= prog_din;
        end
    end

    assign prog_data_o = prog_dout[0 +: DATA_WIDTH];

endmodule

// Automatically generated by PRGA's RTL generator

/*
* Data array for prga_yami_pitoncache.
*/

`include "prga_yami.vh"
`include "prga_yami_pitoncache.vh"
`default_nettype none

module prga_yami_pitoncache_data_array (
    // -- System Ctrl --------------------------------------------------------
    input wire                                          clk
    , input wire                                        rst_n

    // -- Stage II -----------------------------------------------------------
    , input wire                                        rd_s2
    , input wire [`PRGA_YAMI_CACHE_INDEX_WIDTH-1:0]     index_s2

    // -- Stage III ----------------------------------------------------------
    , output reg [`PRGA_YAMI_MFC_DATA_WIDTH-1:0]        rdata_s3

    , input wire [`PRGA_YAMI_CACHE_INDEX_WIDTH-1:0]     index_s3
    , input wire [`PRGA_YAMI_CACHE_NUM_WAYS_LOG2-1:0]   way_s3
    , input wire                                        wr_s3
    , input wire [`PRGA_YAMI_MFC_DATA_BYTES-1:0]        wstrb_s3
    , input wire [`PRGA_YAMI_MFC_DATA_WIDTH-1:0]        wdata_s3
    );

    localparam  LINE_WIDTH  = `PRGA_YAMI_CACHE_NUM_WAYS * `PRGA_YAMI_MFC_DATA_WIDTH;

    // -- Tag Array Memory --
    wire [LINE_WIDTH-1:0]                   din, dout;

    prga_yami_pitoncache_ram_raw #(
        .ADDR_WIDTH     (`PRGA_YAMI_CACHE_INDEX_WIDTH)
        ,.DATA_WIDTH    (LINE_WIDTH)
    ) i_mem (
        .clk        (clk)
        ,.rst_n     (rst_n)
        ,.we        (wr_s3)
        ,.waddr     (index_s3)  // @(posedge clk) index_s3 <= index_s2;
        ,.d         (din)
        ,.re        (rd_s2)
        ,.raddr     (index_s2)
        ,.q         (dout)
        );

    wire [`PRGA_YAMI_MFC_DATA_WIDTH-1:0]    dout_ways   [0:`PRGA_YAMI_CACHE_NUM_WAYS-1];
    wire [`PRGA_YAMI_MFC_DATA_WIDTH-1:0]    din_ways    [0:`PRGA_YAMI_CACHE_NUM_WAYS-1];

    genvar gv_way, gv_byte;
    generate
        for (gv_way = 0; gv_way < `PRGA_YAMI_CACHE_NUM_WAYS; gv_way = gv_way + 1) begin: g_way
            assign dout_ways[gv_way] = dout[`PRGA_YAMI_MFC_DATA_WIDTH * gv_way +: `PRGA_YAMI_MFC_DATA_WIDTH];
            assign din[`PRGA_YAMI_MFC_DATA_WIDTH * gv_way +: `PRGA_YAMI_MFC_DATA_WIDTH] = din_ways[gv_way];

            for (gv_byte = 0; gv_byte < `PRGA_YAMI_MFC_DATA_BYTES; gv_byte = gv_byte + 1) begin: g_byte
                assign din_ways[gv_way][gv_byte * 8 +: 8] = gv_way == way_s3 && wstrb_s3[gv_byte] ? wdata_s3[gv_byte * 8 +: 8] :
                                                                                                    dout_ways[gv_way][gv_byte * 8 +: 8];
            end
        end
    endgenerate

    always @* begin
        rdata_s3 = index_s3 == index_s2 && wr_s3 ? din_ways[way_s3] : dout_ways[way_s3];
    end

endmodule
